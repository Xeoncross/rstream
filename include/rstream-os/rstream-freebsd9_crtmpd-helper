#!/bin/sh
######################################################################################
### rstream-freebsd9_crtmpd-helper
# 
# license: GPL
# 
# authors:
# - Rudolph Sand aka https://github.com/kelexel
# 
# url:
# - https://github.com/kelexel/rstream
#
######################################################################################

if [ -z $TAG ]; then echo "!! Error you are not supposed to execute this file directly"; routerHelp; exit 2; fi

####
### CRTMPD setup
####
crtmpdSetup(){
	logHeader "crtmpd setup"
	checkDir $HOME/var/log/crtmpd -c $USER
	# check if CRTMPD_BIN is found
	checkFile $CRTMPD_BIN 1
	#set CRTMPD_CONF_TPL, if NGNIX_ENABLE=1 we must use proxypublish instead of flvplayer !
	if [ -z $NGINX_ENABLE ] || [ ! $NGINX_ENABLE -eq 1 ]; then
		CRTMPD_CONF_TPL="$HOME/include/templates/crtmpd-conf-flvplayback.tpl"
	else
		CRTMPD_CONF_TPL="$HOME/include/templates/crtmpd-conf-proxypublish.tpl"
	fi
	if [ ! -f $CRTMPD_CONF_TPL ]; then echo "!! Invalid CRTMPD_CONF_TPL , existing. "; exit 99; fi
	CRTMPD_CONF="$HOME/etc/crtmpd.lua"
	# cosmetics
	if [ $CRTMPD_REGEN_CONF -eq 1 ]; then echo "-! enforcing CRTMPD_REGEN_CONF"; fi
	# generate CRTMPD CONF
	if [ $CRTMPD_REGEN_CONF -eq 1 ] ||Â [ ! -f $HOME/etc/$CRTMPD_CONF ]; then
		echo "*+ generating new crtmpd conf";
		# generate local nginx conf
		cat $CRTMPD_CONF_TPL \
			| sed s,_HOME_,$HOME,g \
			| sed s,_CRTMPD_RTMP_IP_,$CRTMPD_RTMP_IP,g \
			| sed s,_CRTMPD_RTMP_PORT_,$CRTMPD_RTMP_PORT,g \
			| sed s,_CRTMPD_PROXY_URL_,$CRTMPD_PROXY_URL,g \
			| sed s,_CRTMPD_PROXY_DSTREAM_,$CRTMPD_PROXY_DSTREAM,g \
			| sed s,_CRTMPD_PROXY_LSTREAM_,$CRTMPD_PROXY_LSTREAM,g \
			| sed s,_CRTMPD_LIVEFLV_IP_,$CRTMPD_LIVEFLV_IP,g \
			| sed s,_CRTMPD_LIVEFLV_PORT_,$CRTMPD_LIVEFLV_PORT,g \
			| sed s,_PROXY_STREAM_REMOTE_,$PROXY_STREAM_REMOTE,g \
			> $CRTMPD_CONF
		cp $HOME/include/templates/crtmpd-users.tpl $HOME/etc/crtmpd-users.lua
		if [ ! -z $CRTMPD_PROXY_ENABLE ] && [ $CRTMPD_PROXY_ENABLE -eq 1 ]; then
			echo "*+ enabling PROXY in crtmpd configuration"
			cat $CRTMPD_CONF \
				| sed s,"--\[\[PROXY","",g \
				| sed s,"PROXY\]\]--","",g \
			> $CRTMPD_CONF.tmp && mv $CRTMPD_CONF.tmp $CRTMPD_CONF

			if [ ! -z $CRTMPD_PROXY_TRANSPARENT ] && [ $CRTMPD_PROXY_TRANSPARENT -eq 1 ]; then
				cat $CRTMPD_CONF \
					| sed s,"--PROXY-TRANSPARENT ","",g \
				> $CRTMPD_CONF.tmp && mv $CRTMPD_CONF.tmp $CRTMPD_CONF
			else
				cat $CRTMPD_CONF \
					| sed s,"--PROXY-REGULAR ","",g \
				> $CRTMPD_CONF.tmp && mv $CRTMPD_CONF.tmp $CRTMPD_CONF
			fi

		fi
		if [ ! -z $FFMPEG_CRTMPD_ENABLE ] && [ $FFMPEG_CRTMPD_ENABLE -eq 1 ]; then
			echo "*+ enabling TRANSCODING in crtmpd configuration"
			cat $CRTMPD_CONF \
				| sed s,"--\[\[TRANSCODING","",g \
				| sed s,"TRANSCODING\]\]--","",g \
			> $CRTMPD_CONF.tmp && mv $CRTMPD_CONF.tmp $CRTMPD_CONF
		fi
		chmod 400 $CRTMPD_CONF
		chown $USER:$USER $CRTMPD_CONF
	fi


	checkServiceEnabled crtmpd -n

	# generate CRTMPD run script
	checkDir $HOME/var/supervise/crtmpd/log -c $USER 755
	#if [ $CRTMPD_REGEN_CONF -eq 1 ]; then echo "-! enforcing regen_conf"; fi
		# generate crtmpd/run script
		echo "*+ generating new crtmpd/run script";
		cat $HOME/include/templates/crtmpd-run.tpl \
			| sed s,_CRTMPD_BIN_,$CRTMPD_BIN,g \
			| sed s,_CRTMPD_CONF_,$CRTMPD_CONF,g \
			| sed s,_USER_,$USER,g \
			> $HOME/var/supervise/crtmpd/run
			chmod 755 $HOME/var/supervise/crtmpd/run
		# generate crtmpd/log/run script
		echo "*+ generating new crtmpd/log/run script";
		cat $HOME/include/templates/crtmpd-run-log.tpl \
			| sed s,_USER_,$USER,g \
			| sed s,_LOG_DIR_,$HOME/var/log/crtmpd,g \
			> $HOME/var/supervise/crtmpd/log/run
			chmod 755 $HOME/var/supervise/crtmpd/log/run
}

####
### CRTMPD router
####
crtmpdRouter(){
	if [ -z $1 ]; then routeHelp; exit 1; fi
	logRoute "crtmpd" $1 
	if [ -z $CRTMPD_ENABLE ] && [ $CRTMPD_ENABLE -eq 0 ]; then return; fi

	if [ -z $DAEMONTOOLS_SERVICE ] || [ ! -d $DAEMONTOOLS_SERVICE ]; then echo "!! error invalid DAEMONTOOLS_SERVICE \"$DAEMONTOOLS_SERVICE\", existing."; exit 99; fi
	case $1 in
		setup)
			crtmpdSetup
		;;
		status|stat)
			echo "* checking if crtmpd service is running"
			svstat $DAEMONTOOLS_SERVICE/crtmpd
			svstat $DAEMONTOOLS_SERVICE/crtmpd/log
		;;
		stop)
			echo "* stopping crtmpd service"
			svc -d $DAEMONTOOLS_SERVICE/crtmpd
			svc -d $DAEMONTOOLS_SERVICE/crtmpd/log
			crtmpdRouter "status"
		;;
		start)
			echo "* starting crtmpd service"
			svc -u $DAEMONTOOLS_SERVICE/crtmpd
			svc -u $DAEMONTOOLS_SERVICE/crtmpd/log
			echo "* waiting 5seconds ..."
			sleep 5
			crtmpdRouter "status"
		;;
		restart)
			crtmpdRouter "stop"
			crtmpdRouter "start"
		;;
		test)
			echo "* testing crtmpd, hit ctrl+c to abort"
			$HOME/var/supervise/crtmpd/run
		;;
		*)
			routeHelp
		;;
	esac
}