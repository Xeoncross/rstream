#!/bin/sh
######################################################################################
### rstream-freebsd9_nginx-helper
# 
# license: GPL
# 
# authors:
# - Rudolph Sand aka https://github.com/kelexel
# 
# url:
# - https://github.com/kelexel/rstream
#
#######################################################################################

if [ -z $TAG ]; then echo "!! Error you are not supposed to execute this file directly"; exit 2; fi

####
### Nginx setup
####
nginxSetup(){
	logHeader "nginx setup"
	# test if nginx is installed
	checkDependency "nginx"
	nginx_bin=`which nginx` # should result in /usr/local/bin/nginx
	# test if nginx was compiled with nginx-rtmp support
	if [ ! `$nginx_bin -V 2>&1 | grep -q rtmp; echo $?` -eq 0 ]; then echo "!! nginx was not compiled with nginx-rtmp support , existing."; exit 99; fi
	echo "* found nginx-rtmp support";
	# test if nginx was compiled with nginx-rtmp/hls support
	if [ ! -z $HLS_ENABLE ] && [ $HLS_ENABLE -eq 1 ] && [ ! `$nginx_bin -V 2>&1 | grep -q hls;  echo $?` -eq 0 ]; then echo "!! nginx was not compiled with nginx-rtmp/hls support , existing."; exit 99; 
		else if [ ! -z $HLS_ENABLE ] && [ $HLS_ENABLE -eq 1 ]; then echo "* found nginx-rtmp/hls support"; fi
	fi
	checkDir $HOME/var/log/nginx -c www 755
	checkDir $HOME/shared/www/stats -c www 777
	#checkDir $HOME/var/log/nginx-crtmpd-ffmpeg -c $USER

	if [ ! -z $HLS_ENABLE ] && [ ! -z $HLS_TYPE ] && [ $HLS_TYPE = "nginx" ]; then checkDir $HOME/tmp/nginx/hls -c www 777; fi

	# set nginx_conf to default FreeBSD nginx port config location
	LINKED_CONF="/usr/local/etc/nginx/nginx.conf"
	NGINX_CONF="$HOME/etc/nginx-rtmp.conf"
	# set NGINX_CONF_TPL based on $NGINX_HLS
	NGINX_CONF_TPL=${HOME}/include/templates/nginx-conf.tpl
	if [ $NGINX_REGEN_CONF -eq 1 ]; then echo "-! enforcing NGINX_REGEN_CONF"; fi
	if [ $NGINX_REGEN_CONF -eq 1 ] ||Â [ ! -f $NGINX_CONF ]; then
		echo "*+ generating new nginx conf";
		# generate local nginx conf
		cat $NGINX_CONF_TPL \
			| sed s,_HOME_,$HOME,g \
			| sed s,_NGINX_RTMP_IP_,$NGINX_RTMP_IP,g \
			| sed s,_NGINX_RTMP_PORT_,$NGINX_RTMP_PORT,g \
			| sed s,_NGINX_RTMP_STREAM_,$NGINX_RTMP_STREAM,g \
			> $NGINX_CONF
	fi
	
	# copy mime types
	cp $HOME/include/templates/nginx-rtmp-mime-types.tpl $HOME/etc/nginx-rtmp-mime.types

	# only make the following tests if NGINX_HLS is set to 1
	if [ $HLS_ENABLE ]; then

		echo "*+ enabling HLS in nginx configuration"
		cat $NGINX_CONF \
			| sed s,_HLS_ENABLE_,$HLS_ENABLE,g \
			| sed s,_HLS_FQDN_,$HLS_FQDN,g \
			| sed s,_HLS_TYPE_,$HLS_TYPE,g \
			| sed s,_HLS_WWW_,$HLS_WWW,g \
			| sed s,_HLS_PATH_,$HLS_PATH,g \
			| sed s,_HLS_STREAM_,$HLS_STREAM,g \
			| sed s,"#HLS","",g \
		> $NGINX_CONF.tmp && mv $NGINX_CONF.tmp $NGINX_CONF
	fi
	if [ $FFMPEG_ENABLE ]; then
		echo "*+ enabling TRANSCODING in nginx configuration"
		FFMPEG_NGINX_TRANSCODING=1
		cat $NGINX_CONF \
			| sed s,_FFMPEG_BIN_,$FFMPEG_BIN,g \
			| sed s,_FFMPEG_TRANSCODER_IP_,$FFMPEG_TRANSCODER_IP,g \
			| sed s,_FFMPEG_NGINX_TRANSCODING_,$FFMPEG_NGINX_TRANSCODING,g \
			| sed s,"#TRANSCODING","",g \
		> $NGINX_CONF.tmp && mv $NGINX_CONF.tmp $NGINX_CONF

	fi

	checkServiceEnabled nginx -n

	# generate NGINX run script
	checkDir $HOME/var/supervise/nginx/log -c $USER 755
	# generate nginx/run script
	echo "*+ generating new nginx/run script";
	cat $HOME/include/templates/nginx-run.tpl \
		| sed s,_NGINX_BIN_,$NGINX_BIN,g \
		> $HOME/var/supervise/nginx/run
		chmod 755 $HOME/var/supervise/nginx/run
	# generate nginx/log/run script
	echo "*+ generating new nginx/log/run script";
	cat $HOME/include/templates/nginx-run-log.tpl \
		| sed s,_USER_,'www',g \
		| sed s,_LOG_DIR_,$HOME/var/log/nginx,g \
		> $HOME/var/supervise/nginx/log/run
		chmod 755 $HOME/var/supervise/nginx/log/run
}
####
### CRTMPD router
####
nginx-router(){
	if [ -z $1 ]; then routeHelp; exit 1; fi
	logRoute "nginx" $1 
	if [ -z $NGINX_ENABLE ] || [ ! $NGINX_ENABLE -eq 1 ]; then break; fi

	case $1 in
		setup)
			nginxSetup
		;;
		status|stat)
			echo "* checking if nginx is running"
			svstat $DAEMONTOOLS_SERVICE/nginx
			svstat $DAEMONTOOLS_SERVICE/nginx/log
		;;
		stop)
			echo "* stopping nginx"
			svc -d $DAEMONTOOLS_SERVICE/nginx
			svc -d $DAEMONTOOLS_SERVICE/nginx/log
			if [ ! -z $HLS_ENABLE ] && [ $HLS_ENABLE -eq 1 ]; then nginx-router "hls-flush"; fi
		;;
		start)
			echo "* starting nginx"
			svc -u $DAEMONTOOLS_SERVICE/nginx
			svc -u $DAEMONTOOLS_SERVICE/nginx/log
			sleep 5
			nginx-router "status"
		;;
		restart)
			nginx-router "stop"
			nginx-router "start"
		;;
		hls-flush)
			echo "* flushing hls directory"
			rm -f $HOME/tmp/nginx/hls/*.ts
			rm -f $HOME/tmp/nginx/hls/*.m3u8
		;;
		test)
			echo "* testing nginx, hit ctrl+c to abort"
			$HOME/var/supervise/nginx/run
		;;
		*) 
			routeHelp
		;;
	esac
}