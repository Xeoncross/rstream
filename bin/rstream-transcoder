#!/bin/sh
######################################################################################
### rstream-transcoder
# 
# license: GPL
# 
# authors:
# - Rudolph Sand aka https://github.com/kelexel
# 
# url:
# - https://github.com/kelexel/rstream
#
######################################################################################

HOME="/home/rstream"
# User to which everything will be setuidgid to
# This only checks & creates the default user test on your system
USER="rstream"

# set DAEMONTOOLS_SERVICE based on default port service path
DAEMONTOOLS_SERVICE="/var/service"

VERBOSE=0

HLS_CLEANUP=0

#########################
#########################
#########################
# You should not need to edit anything below this point.
# If you have/f[]eel the need to do otherwise, please inform me of your changes via github.
#########################
#########################
#########################

. $HOME/.version

####
### Load OS Core files
####
echo ""
echo ""
##
if [ ! -f $HOME/include/core/rstream-core ]; then echo "!! invalid rstream setup - invalid HOME ?"; exit 99; fi
. $HOME/include/core/rstream-core

####
### Load OS Core files
####
case `uname -s` in
	FreeBSD) system_os="freebsd9";;
	*) echo "!! Sorry, but your current Operating System is not supported yet, exiting." exit 2;;
esac
echo "########## rstream-transcoder-$TAG for rstream $TAG on $system_os"
echo ""
. $HOME/include/${system_os}/rstream-${system_os}_common-helper
. $HOME/etc/rstream.conf
. $HOME/include/${system_os}/rstream-${system_os}_crtmpd-helper
. $HOME/include/${system_os}/rstream-${system_os}_daemontools-helper
. $HOME/include/${system_os}/rstream-${system_os}_nginx-helper
. $HOME/include/${system_os}/rstream-${system_os}_ffmpeg-helper
rstream-core-init


genStreamDestinations(){
	proto=$1
	dest_host=$2
	dest_port=$3
	dest_app=$4
	stream=$5
	# a bit of logic ..
	dest_720="$proto://${dest_host}:${dest_port}/${dest_app}/${stream}_720p"
	dest_480="$proto://${dest_host}:${dest_port}/${dest_app}/${stream}_480p"
	dest_360="$proto://${dest_host}:${dest_port}/${dest_app}/${stream}_360p"
	dest_240="$proto://${dest_host}:${dest_port}/${dest_app}/${stream}_240p"
}


genPlaylistMulti()
{
	cd $2
	echo "*+ generating new multi-bitrate ${1}.m3u8 playlist";
	if [ ! -f ./${1}_360p.m3u8 ]; then echo "Error, ffmpeg not running ? ";
		echo `pwd`;
	 exit 1; fi
	playlist=${1}.m3u8
	echo "#EXTM3U" > $playlist
#	echo "#EXT-X-STREAM-INF:PROGRAM-ID=1, BANDWIDTH=128000" >> $playlist
#	echo "${1}_240p.m3u8" >> $playlist
	echo "#EXT-X-STREAM-INF:PROGRAM-ID=1, BANDWIDTH=256000" >> $playlist
	echo "${1}_360p.m3u8" >> $playlist
	echo "#EXT-X-STREAM-INF:PROGRAM-ID=1, BANDWIDTH=396000" >> $playlist
	echo "${1}_480p.m3u8" >> $playlist
#	echo "#EXT-X-STREAM-INF:PROGRAM-ID=1, BANDWIDTH=512000" >> $playlist
#	echo "${1}_720p.m3u8" >> $playlist
	
}

transcoderNginxHLS(){
	if [ -z $FFMPEG_NGINX_ENABLE ] || [ ! $FFMPEG_NGINX_ENABLE -eq 1 ]; then echo "Error: \"-run nginx <streamname>\" supplied, but FFMPEG_NGINX_ENABLE is not set to \"1\" in $HOME/etc/rstream.conf, exiting !"; exit 98; fi
	app="proxy"
	if [ -z $1 ]; then echo "!! error missing stream name, exiting !!"; exit 99; fi
	stream=$1
	
	src="rtmp://$NGINX_RTMP_IP:$NGINX_RTMP_PORT/$app/$stream"

	checkDir $HOME/tmp/ffmpeg/hls -c www 777

	cd $HOME/tmp/ffmpeg/hls

	if [ ! -z $HLS_CLEANUP ] && [ $HLS_CLEANUP -eq 1 ]; then
		echo "** Cleaning up HLS files older than 5 minutes"
		find $HOME/tmp/ffmpeg/hls -mmin +5 -name "*.m3u8" -o -name "*.ts" -o -name "*.core" -exec rm -f {} \;
	fi

#	if [ -f $HOME/tmp/ffmpeg/hls/lock.${stream} ]; then echo "!! Ffmpeg already running for stream $stream ?"; exit 0; fi

	(sleep 20 && genPlaylistMulti $stream $HOME/tmp/ffmpeg/hls) &

	cmd=""
	cmd="$cmd -re -c:a libfaac -ar 44000 -b:a 96k -flags -global_header -map 0 -f segment -segment_time 10 -segment_format mpegts ${stream}_720p%05d.ts"
#	cmd="$cmd -re -c:a libfaac -ar 44000 -b:a 96k -c:v libx264 -preset ultrafast -crf 23 -s 854x480  -b:v 296k -vpre libx264-ipod640 -flags -global_header -map 0 -f segment -segment_time 10 -segment_list ${stream}_480p.m3u8 -segment_list_live 1 -segment_list_size 10 -segment_format mpegts ${stream}_480p%05d.ts"
#	cmd="$cmd -re -c:a libfaac -ar 22050 -b:a 64k -c:v libx264 -preset ultrafast -crf 23 -s 640x360  -b:v 256k -vpre libx264-ipod320 -flags -global_header -map 0 -f segment -segment_time 10 -segment_list ${stream}_360p.m3u8 -segment_list_live 1 -segment_list_size 10 -segment_format mpegts ${stream}_360p%05d.ts"
#	cmd="$cmd -re -c:a libfaac -ar 22050 -b:a 48k -c:v libx264 -preset ultrafast -crf 23 -s 426x240  -b:v 128k -vpre libx264-ipod320 -flags -global_header -map 0 -f segment -segment_time 10 -segment_list ${stream}_240p.m3u8 -segment_list_live 1 -segment_list_size 10 -segment_format mpegts ${stream}_240p%05d.ts"
	logHeader "Running enconding args: $cmd"
	$FFMPEG_BIN -loglevel info -i "$src buffer=3000 live=1 timeout=500" $cmd
	sleep 3
}
# nginx transcoding - working as of 0.4
transcoderNginxH264(){
	if [ ! -f $FFMPEG_BIN ]; then echo "!! error FFMPEG_BIN not found !!"; exit 99; fi
	if [ -z $FFMPEG_NGINX_ENABLE ] || [ ! $FFMPEG_NGINX_ENABLE -eq 1 ]; then echo "Error: \"-run nginx <streamname>\" supplied, but FFMPEG_NGINX_ENABLE is not set to \"1\" in $HOME/etc/rstream.conf, exiting !"; exit 98; fi
	app="proxy"
	dest_app="r"
	if [ -z $1 ]; then echo "!! error missing stream name, exiting !!"; exit 99; fi
	stream=$1

	if [ -f $HOME/tmp/nginx/hls/lock.${stream} ]; then echo "Lock found for stream $stream !! exiting"; exit 0; fi
		touch $HOME/tmp/nginx/hls/lock.${stream}

	src="rtmp://$NGINX_RTMP_IP:$NGINX_RTMP_PORT/$app/$stream"
	genStreamDestinations "rtmp" $NGINX_RTMP_IP $NGINX_RTMP_PORT $dest_app $stream h264
HLS_CLEANUP=1
	# if hls is enabled and set to nginx, create the multi-bitrate playlist 10 secs after the stream started to aboid "iOS stuck on black screen"
	if [ ! -z $HLS_ENABLE ] && [ $HLS_ENABLE -eq 1 ] && [ ! -z $HLS_TYPE ] && [ $HLS_TYPE = "nginx" ]; then
		checkDir $HOME/tmp/nginx/hls -c www 777;
		if [ ! -z $HLS_CLEANUP ] && [ $HLS_CLEANUP -eq 1 ]; then
			echo "** Cleaning up HLS files older than 5 minutes"
			find $HOME/tmp/nginx/hls -mmin +5 -name "${stream}_*.m3u8" -o -name "${stream}_*.ts" -o -name "lock.${stream}" -exec rm -f {} \;
		fi
		echo "** Launching multi-bitrate sleeping beauty"
		(sleep 10 && genPlaylistMulti $stream $HLS_PATH/hls) &
	fi
	cmd=""
#	cmd="$cmd -re -c:a libfaac -ar 44100 -b:a 96k -c:v libx264 -preset fast -crf 16 -s 1280x720 -b:v 1024k -r 25 -metadata streamName=${stream}_720p -f flv $dest_720"
#	cmd="$cmd -re -acodec copy -vcodec copy -metadata streamName=${stream}_720p -r 25 -f flv $dest_720"
#	cmd="$cmd -re -c:a libfaac -ar 44100 -b:a 96k -c:v libx264 -preset fast -crf 18 -s 854x480 -b:v 512k -r 25 -metadata streamName=${stream}_480p -f flv $dest_480"
#	cmd="$cmd -re -c:a libfaac -ar 22050 -b:a 64k -c:v libx264 -preset ultrafast -crf 20 -s 640x360 -b:v 396k -r 25 -metadata streamName=${stream}_360p  -f flv $dest_360"
#	cmd="$cmd -re -c:a libfaac -ar 22050 -b:a 48k -c:v libx264 -preset ultrafast -crf 23  -s 426x240 -b:v 256k -r 25 -metadata streamName=${stream}_240p  -f flv $dest_240"
	cmd="$cmd -re -acodec copy -vcodec copy -metadata streamName=${stream}_720p -r 25 -f flv $dest_720"
	cmd="$cmd -re -c:a libfaac -ar 44100 -b:a 96k -c:v libx264 -preset fast -crf 18 -s 800x600 -b:v 512k -r 25 -metadata streamName=${stream}_480p -f flv $dest_480"
	cmd="$cmd -re -c:a libfaac -ar 22050 -b:a 64k -c:v libx264 -preset ultrafast -crf 20 -s 600x480 -b:v 396k -r 25 -metadata streamName=${stream}_360p  -f flv $dest_360"
	cmd="$cmd -re -c:a libfaac -ar 22050 -b:a 48k -c:v libx264 -preset ultrafast -crf 23  -s 320x240 -b:v 256k -r 25 -metadata streamName=${stream}_240p  -f flv $dest_240"
	logHeader "Running enconding args: $cmd"
	$FFMPEG_BIN -loglevel fatal -i "$src buffer=100 timeout=2" $cmd
	rm -f $HOME/tmp/nginx/hls/lock.${stream}

	#exec $FFMPEG_BIN -threads 16  -i "$src live=1" $cmd
}

transcoderCrtmpd(){
	if [ -z $FFMPEG_CRTMPD_ENABLE ] || [ ! $FFMPEG_CRTMPD_ENABLE -eq 1 ]; then echo "Error: \"-run crtmpd <streamname>\" supplied, but FFMPEG_CRTMPD_ENABLE is not set to \"1\" in $HOME/etc/rstream.conf, exiting !"; exit 98; fi
	if [ -z $1 ]; then echo "!! error missing stream name, exiting !!"; exit 99; fi

	app="proxy"
	dest_app="r"
	stream=$1
	src="rtmp://$CRTMPD_RTMP_IP:$CRTMPD_RTMP_PORT/$app/$stream"

	genStreamDestinations "tcp" $CRTMPD_LIVEFLV_IP $CRTMPD_LIVEFLV_PORT $stream
	cmd=""
	cmd="$cmd -re -acodec libfaac -ar 44100 -b:a 96k -vcodec libx264 -s 1280x720 -b:v 896k -f flv -metadata streamName=${stream}_720p -f flv $dest_720"
	cmd="$cmd -re -acodec libfaac -ar 44100 -b:a 96k -vcodec libx264 -s 854x480 -b:v 512k -f flv -metadata streamName=${stream}_480p -f flv $dest_480"
	cmd="$cmd -re -acodec libfaac -ar 22050 -b:a 96k -vcodec libx264 -s 640x360 -b:v 396k -f flv -metadata streamName=${stream}_360p -f flv $dest_360"
	cmd="$cmd -re -acodec libfaac -ar 22050 -b:a 48k -vcodec libx264 -s 426x250 -b:v 256k -f flv -metadata streamName=${stream}_240p -f flv $dest_240"
	echo ""
	logHeader "Running $FFMPEG_BIN -threads 15 -i \"$src live=1\"  $cmd"
	echo
	exec $FFMPEG_BIN -i "$src live=1" $cmd
}

routeTranscoder(){

	if [ -z $1 ]; then routeHelp; exit 99; fi
	case $1 in
		-run)
			if [ -z $2 ]; then routeHelp; exit 99; fi
			case $2 in
				crtmpd) transcoderCrtmpd $3;; # CRTMPD (RTMP / FLV) > ffmpeg > CRTMPD (tcvp / FLV)
				nginx) transcoderNginxH264 $3;; # CRTMPD (RTMP / FLV) > ffmpeg > NGINX (rtmp / FLV)
				hls) transcoderNginxHLS $3;; # CRTMPD (RTMP / FLV) > ffmpeg > NGINX (rtmp / FLV)
				*) routeHelp;;
			esac
		;;
		-service-create) ffmpeg-router "create" $3;;
		-service-link) ffmpeg-router "link" $3;;
	esac
}


routeTranscoder $1 $2 $3 $4

#### Below lies the graveyard of my ffmpeg tests..

#checkDir $HLS_PATH/$app/$stream -rc

# From https://groups.google.com/forum/#!topic/c-rtmp-server/bzsV61wJGHg[1-25]
#ffmpeg -i "rtmp://localhost:1935/live/mystream live=1" -fpre "/usr/share/ffmpeg/libx264-ipod640.ffpreset" -vcodec libx264 -acodec aac -ac 2 -ar 44100 -ab 127k -strict experimental -f flv "rtmp://localhost:1935/live/mystream_recode live=1"


#-re -acodec libfaac -ar 22050 -b:a 96 -vcodec libx264 -s svga -b:v 500k -f flv "rtmp://localhost:1935/live/test_500?authmod=adobe&login=broadcast&password=n3rox flashver=FMLE/3.0\20(compatible;\20FMSc/1.0)"
#-re -acodec libfaac -ar 22050 -vcodec libx264 -s svga -b:v 500k -f flv "rtmp://localhost:1935/live/test_500?login=broadcast&password=n3rox flashver=FMLE/3.0\20(compatible;\20FMSc/1.0)"
#-re -acodec libfaac -ar 22050 -vcodec libx264 -s svga -b:v 500k -f flv "/home/stream/docs/test_500b.flv"
#ffmpeg -i "rtmp://localhost/live/test live=1" \
#-re -acodec libfaac -ar 22050 -vcodec libx264 -s svga -b:v 500k -f flv "rtmp://localhost/live/test_500" 

#-re -acodec libfaac -ar 22050 -vcodec libx264 -s vga -b 300k -f flv "rtmp://localhost/live/test_300" 
#

#ffmpeg -threads 15 -i "rtmp://localhost/live/test live=1" \
#-re -acodec libfaac -ar 22050 -vcodec libx264 -s svga -b 500k -f flv "rtmp://localhost/live/test_500" \
#-re -acodec libfaac -ar 22050 -vcodec libx264 -s vga -b 300k -f flv "rtmp://localhost/live/test_300" \
#-re -acodec libfaac -ar 22050 -vcodec libx264 -s qvga -b 150k -f flv "rtmp://localhost/live/test_150" \
#-re -acodec libfaac -ar 22050 -vcodec libx264 -s qqvga -b 50k -f flv "rtmp://localhost/live/test_50"

#	cmd="$cmd -re -vcodec libvpx -s 1280x720 -filter:v yadif -g 120 -level 216 -profile:v 0 -qmax 42 -qmin 10 -rc_buf_aggressivity 0.95 -vb 1M -acodec libvorbis -aq 90 -ac 1 -metadata streamName=${stream}_720p_vp8 -f webm $dest_720"


# -f flv "rtmp://live.justin.tv/app/$STREAM_KEY flashver=FMLE/3.0\20(compatible;\20FMSc/1.0)"  

#routeTranscoder $1 $2

# nice and clean ..
echo ""
echo "> done"
echo ""
exit 0;
